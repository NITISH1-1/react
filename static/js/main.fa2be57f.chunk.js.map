{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","to","aboutText","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","rows","placeholder","onChange","event","console","log","target","value","backgroundColor","disabled","length","newText","toUpperCase","toLowerCase","split","join","filter","element","Alert","height","alert","msg","About","myStyle","defaultProps","App","setMode","setAlert","showAlert","message","document","body","setTimeout","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fa2be57f.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"/\">\r\n        {props.title}\r\n      </a>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-bs-toggle=\"collapse\"\r\n        data-bs-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/about\">\r\n              {props.aboutText}\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n        <input className=\"form-check-input pointer\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n      </div>  \r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Set Title Here',\r\n  aboutText: 'About'\r\n}","import React, {useState} from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handelOnClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n  }\r\n\r\n  const handelOnClickLo = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n  }\r\n\r\n  const handleOnChange = (event) => {\r\n    console.log('being changed')\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const handelExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n  }\r\n\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div style={{color: props.mode === 'light' ? 'black': 'white'}} className=\"mb-3\">\r\n        <h1>{props.heading}</h1>\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"exampleFormControlTextarea1\"\r\n          rows=\"8\"\r\n          placeholder=\"Enter your text\"\r\n          onChange={handleOnChange}\r\n          value={text}\r\n          style={{backgroundColor: props.mode === 'light' ? 'white': 'grey', color: props.mode === 'light' ? 'black': 'white' }}\r\n        ></textarea>\r\n      </div>\r\n      <div className=\"flex\">\r\n      <button disabled={text.length === 0} className=\"btn btn-primary cursor mx-1 my-1\" onClick={handelOnClick} >Convert to Uppercase</button>\r\n      <button disabled={text.length === 0} className=\"btn btn-primary cursor mx-1 my-1\" onClick={handelOnClickLo} >Convert to Lowercase</button>\r\n      <button disabled={text.length === 0} className=\"btn btn-primary cursor mx-1 my-1\" onClick={handelExtraSpaces} >Remove Extra Spaces</button>\r\n\r\n      </div>\r\n      <div className=\"container my-3\" style={{color: props.mode === 'light' ? 'black': 'white'}}>\r\n        <h2 >Your Text Summary</h2>\r\n        <p>{text.split(\" \").filter((element) => {return element.length!==0}).length} words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").filter((element) => {return element.length!==0}).length} Minutes Read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0 ? text : 'Enter something above to preview it'}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  // const capitalize = (word)=> {\r\n  //   const lower = word.toLowerCase();\r\n  //   return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  // }\r\n  return (\r\n    <div style={{height : '50px'}}>\r\n      {props.alert && <div\r\n        className={`alert alert-${props?.alert?.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{props?.alert?.type}</strong>: {props?.alert?.msg}\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn-close\"\r\n          data-bs-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n        ></button>\r\n      </div>}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n  // const [myStyle, setMyStyle]=  useState({\r\n  //   color: 'white',\r\n  //   backgroundColor: 'black'\r\n  // })\r\n\r\n  let myStyle = {\r\n    color: props.mode === 'dark' ? 'white':'#042842',\r\n    backgroundColor: props.mode === 'dark' ? '#042842':'white'\r\n  }\r\n\r\n  return (\r\n    <div className='container' style={myStyle}>\r\n      <h1 className=\"my-3\">About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n      <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        <strong>About Text Utility</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n        This text utility is used for various functionalities like copy text, convert text into opposite cases, remove spaces, show preview etc\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n      <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        <strong>Easy to use</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n        There are various buttons to use the mentioned functionalities. User can use these button to access the desired functionality\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n      <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n      <strong>Terms & Conditions</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n        There are no terms and condition. Feel free to use\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n    </div>\r\n  )\r\n}\r\n","import \"./App.css\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport TextForm from \"./components/TextForm\";\r\nimport Alert from \"./components/Alert\";\r\nimport About from \"./components/About\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nimport { Routes, Route, BrowserRouter } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState(\"light\");\r\n\r\n  const toggleMode = () => {\r\n    if (mode === \"light\") {\r\n      setMode(\"dark\");\r\n      document.body.style.backgroundColor = \"#042842\";\r\n      showAlert(\"Dark mode has been enabled\", \"success\");\r\n      setTimeout(() => {\r\n        setAlert(null);\r\n      }, 1500)\r\n    } else {\r\n      setMode(\"light\");\r\n      document.body.style.backgroundColor = \"white\";\r\n      showAlert(\"Light mode has been enabled\", \"success\");\r\n      setTimeout(() => {\r\n        setAlert(null);\r\n      }, 1500)\r\n    }\r\n  };\r\n\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      msg: message,\r\n      type: type,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Navbar\r\n          title=\"TextUtils\"\r\n          mode={mode}\r\n          toggleMode={toggleMode}\r\n          aboutText=\"About US\"\r\n        />\r\n        <Alert className=\"my-3\" alert={alert} />\r\n        <div className=\"container my-3\">\r\n          <Routes>\r\n            <Route exact path=\"/about\" element={<About mode={mode} />}/>\r\n            <Route exact path=\"/\" element={\r\n              <TextForm\r\n                showAlert={showAlert}\r\n                mode={mode}\r\n                heading=\"Try Text Utility - Word Counter, Character Counter, Remove extra spaces\"\r\n              />\r\n            }/>\r\n          </Routes>\r\n        </div>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}